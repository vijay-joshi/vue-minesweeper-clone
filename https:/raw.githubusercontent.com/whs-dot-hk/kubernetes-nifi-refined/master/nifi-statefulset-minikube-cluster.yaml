apiVersion: v1
kind: Service
metadata:
  name: nifi-headless
  labels:
    app: nifi
spec:
  ports:
  - port: 8080
    name: http
  clusterIP: None
  selector:
    app: nifi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
spec:
  selector:
    matchLabels:
      app: nifi
      tier: backend
      track: stable
  serviceName: nifi-headless
  replicas: 3
  template:
    metadata:
      labels:
        app: nifi
        tier: backend
        track: stable
    spec:
      containers:
        - name: nifi
          image: whshk/nifi
          env:
            - name: NIFI_CLUSTER_IS_NODE
              value: "true"
            - name: NIFI_CLUSTER_NODE_PROTOCOL_PORT
              value: "2882"
            - name: NIFI_ZK_CONNECT_STRING
              value: test-zookeeper
            - name: KUBERNETES_HEADLESS_SERVICE_NAME
              value: nifi-headless
          ports:
            - name: http
              containerPort: 8080
            - name: protocol
              containerPort: 2882
          volumeMounts:
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/conf
              subPath: conf
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/logs
              subPath: logs
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/database_repository
              subPath: database_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/flowfile_repository
              subPath: flowfile_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/content_repository
              subPath: content_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/provenance_repository
              subPath: provenance_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/state
              subPath: state
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
    - metadata:
        name: nifi-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "standard"
        resources:
          requests:
            storage: 10Gi
